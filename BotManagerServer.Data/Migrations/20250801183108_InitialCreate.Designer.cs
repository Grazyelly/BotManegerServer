// <auto-generated />
using System;
using BotManagerServer.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BotManagerServer.Data.Migrations
{
    [DbContext(typeof(ChatbotDbContext))]
    [Migration("20250801183108_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("BotManagerServer.Core.Entities.Chatbot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contexto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Chatbots");
                });

            modelBuilder.Entity("BotManagerServer.Core.Entities.Mensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChatbotId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("RespostaBot")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TextoUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatbotId");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("BotManagerServer.Core.Entities.Mensagem", b =>
                {
                    b.HasOne("BotManagerServer.Core.Entities.Chatbot", "Chatbot")
                        .WithMany("Mensagens")
                        .HasForeignKey("ChatbotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chatbot");
                });

            modelBuilder.Entity("BotManagerServer.Core.Entities.Chatbot", b =>
                {
                    b.Navigation("Mensagens");
                });
#pragma warning restore 612, 618
        }
    }
}
